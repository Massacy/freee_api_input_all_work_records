# ===========================================
# Neon PostgreSQL Configuration
# ===========================================
# あなたのNeonプロジェクトの情報に置き換えてください

# Neon PostgreSQL Database URL
# 形式: postgresql://username:password@hostname:port/database?sslmode=require
DATABASE_URL=postgresql://username:password@hostname:port/database?sslmode=require

# または個別設定
DB_HOST=your-neon-hostname.neon.tech
DB_PORT=5432
DB_NAME=your-database-name
DB_USER=your-username
DB_PASSWORD=your-password
DB_SSL=require

# ===========================================
# Security Configuration
# ===========================================

# Encryption Key (必須: 32文字の文字列)
# 例: abcd1234efgh5678ijkl9012mnop3456
# オンラインツールで生成推奨: https://randomkeygen.com/
ENCRYPTION_KEY=your-32-character-encryption-key-here

# ===========================================
# freee API Configuration
# ===========================================
# setupCredentials.jsの代わりに、ここに認証情報を設定できます

# 任意のユーザー名
FREEE_USERNAME=your_username

# freee APIクライアント情報
FREEE_CLIENT_ID=your_freee_client_id
FREEE_CLIENT_SECRET=your_freee_client_secret

# freee会社・従業員情報
FREEE_COMPANY_ID=your_company_id
FREEE_EMPLOYEE_ID=your_employee_id

# freee認証トークン
FREEE_REFRESH_TOKEN=your_refresh_token
FREEE_ACCESS_TOKEN=your_access_token
FREEE_ACCESS_TOKEN_EXPIRES_IN=21600

# ===========================================
# Application Settings
# ===========================================

# Environment
NODE_ENV=development

# ===========================================
# Setup Instructions
# ===========================================
# 1. このファイルを .env にコピー: cp .env.sample .env
# 2. 上記の値をあなたの実際の値に置き換える
# 3. node setupCredentials.js を実行

# ===========================================
# Neon Database Setup
# ===========================================
# 1. Neonダッシュボードでプロジェクトを作成
# 2. データベース接続文字列を取得
# 3. 以下のSQLでテーブルを作成:
#
# CREATE TABLE freee_api_user_info (
#   id SERIAL PRIMARY KEY,
#   username VARCHAR(255) NOT NULL,
#   client_id VARCHAR(255) NOT NULL,
#   client_secret TEXT NOT NULL,
#   company_id VARCHAR(255) NOT NULL,
#   employee_id VARCHAR(255) NOT NULL,
#   created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
#   updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
# );
#
# CREATE TABLE freee_api_tokens (
#   id SERIAL PRIMARY KEY,
#   user_info_id INTEGER REFERENCES freee_api_user_info(id),
#   refresh_token TEXT NOT NULL,
#   access_token TEXT,
#   access_token_expires_in INTEGER DEFAULT 0,
#   created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
# );
#
# CREATE INDEX idx_freee_api_tokens_user_info_id ON freee_api_tokens(user_info_id);
# CREATE INDEX idx_freee_api_tokens_created_at ON freee_api_tokens(created_at);
